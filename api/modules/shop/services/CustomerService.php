<?php


namespace api\modules\shop\services;


use api\modules\shop\forms\CustomerAddressForm;
use api\modules\shop\forms\CustomerForm;
use api\modules\shop\resources\CustomerResource;
use api\modules\shop\search\CustomerSearch;
use yii\base\UserException;
use yii\data\ActiveDataProvider;

class CustomerService extends Service
{
    /**
     * @var string
     */
    public $formClass = CustomerForm::class;

    /**
     * @var string
     */
    public $resourceClass = CustomerResource::class;

    /**
     * @var string
     */
    public $searchClass = CustomerSearch::class;

    /**
     * 客户列表
     * @param array $params
     * @return array|ActiveDataProvider
     * @throws UserException
     */
    public function index($params = [])
    {
        return parent::index($params); // TODO: Change the autogenerated stub
    }

    /**
     * 客户详情
     * @param int $id
     * @return CustomerResource
     * @throws UserException
     */
    public function show($id)
    {
        return parent::show($id); // TODO: Change the autogenerated stub
    }

    /**
     * 添加客户
     * @param array $data
     * @return CustomerForm
     * @throws UserException
     */
    public function store($data = [])
    {
        return parent::store($data); // TODO: Change the autogenerated stub
    }

    /**
     * 更新客户
     * @param array $data
     * @return CustomerForm
     * @throws UserException
     */
    public function update($data = [])
    {
        return parent::update($data); // TODO: Change the autogenerated stub
    }

    /**
     * 删除客户
     * @param array $data
     * @return CustomerForm
     * @throws UserException
     */
    public function destroy($data = [])
    {
        $form = parent::destroy($data); // TODO: Change the autogenerated stub
        if (!$form->hasErrors()) {
            (new CustomerAddressService())->delAllCustomerAddress($data['id']);
        }
        return $form;
    }

    /**
     * 创建客户，并且创建一个默认的收货地址
     * @param array $data
     * @return CustomerAddressForm|CustomerForm
     * @throws UserException
     */
    public function createCustomerAndAddress($data = [])
    {
        $form = $this->formValidate($data, CustomerForm::CREATE_CUSTOMER_AND_ADDRESS);
        if ($form->hasErrors()){
            return $form;
        }

        //添加一个客户
        $customer = $this->store([
            'shop_id' => $this->user()->shop_id,
            'name' => $form->name,
            'phone' => $form->phone,
            'wx' => $form->wx,
            'loc_number' => $form->loc_number
        ]);

        if ($customer->hasErrors()) {
            return $customer;
        }

        //设置默认地址
        $address = (new CustomerAddressService())->store([
            'shop_id' => $this->user()->shop_id,
            'customer_id' => $customer->id,
            'consignee' => $customer->name,
            'consignee_tel' => $customer->phone,
            'address' => $customer->address?:$customer->name
        ]);

        if ($address->hasErrors()) {
            return $address;
        }

        return $form;
    }

    /**
     * @param array $data
     * @param null $scenes
     * @return CustomerForm
     * @throws UserException
     */
    public function formValidate($data = [], $scenes = null)
    {
        return parent::formValidate($data, $scenes); // TODO: Change the autogenerated stub
    }
}