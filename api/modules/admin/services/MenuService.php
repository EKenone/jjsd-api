<?php


namespace api\modules\admin\services;


use api\modules\admin\forms\MenuForm;
use api\modules\admin\models\Menu;
use api\modules\admin\resources\MenuResource;
use api\modules\admin\search\MenuSearch;
use common\helpers\BaseHelper;
use yii\base\UserException;

class MenuService extends Service
{
    /**
     * @var string
     */
    public $formClass = MenuForm::class;

    /**
     * @var string
     */
    public $resourceClass = MenuResource::class;

    /**
     * @var string
     */
    public $searchClass = MenuSearch::class;

    /**
     * 菜单列表
     * @param array $params
     * @return array
     */
    public function index($params = [])
    {
        $perPage = $params['per_page'] ?? 20;
        $page = $params['page'] ?? 1;
        $menus = MenuResource::find()
            ->with(['parentMenu'])
            ->notDelete()
            ->orderBy(['sort'=>SORT_DESC])
            ->all();
        $list = [];
        foreach ($menus as $menu) {
            $list[] = $menu->setFieldType(Menu::FIELD_INDEX)->toArray();
        }
        $tree = array_values(BaseHelper::tree($list));
        $list = array_chunk($tree, $perPage)[$page-1];
        return [
            'list' => $list,
            'page' => [
                'total_count' => count($tree),
                'current_page' => (int)$page,
                'total_page' => ceil(count($tree) / ($perPage)),
                'page_size' => (int)$perPage
            ]
        ];
    }

    /**
     * 添加管理员
     * @param array $data
     * @return MenuForm
     * @throws UserException
     */
    public function store($data = [])
    {
        return parent::store($data); // TODO: Change the autogenerated stub
    }

    /**
     * 更新管理员
     * @param array $data
     * @return MenuForm
     * @throws UserException
     */
    public function update($data = [])
    {
        return parent::update($data); // TODO: Change the autogenerated stub
    }

    /**
     * 删除管理员
     * @param array $data
     * @return MenuForm
     * @throws UserException
     */
    public function destroy($data = [])
    {
        return parent::destroy($data); // TODO: Change the autogenerated stub
    }

    /**
     * 菜单选择
     * @return array
     */
    public function select()
    {
        $list = MenuResource::find()
            ->select(['id', 'title', 'pid', 'sort'])
            ->notDelete()
            ->asArray()
            ->orderBy(['sort'=>SORT_DESC])
            ->all();

        return array_values(BaseHelper::tree($list));
    }
}