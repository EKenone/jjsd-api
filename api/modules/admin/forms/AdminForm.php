<?php


namespace api\modules\admin\forms;


use api\modules\admin\models\Admin;
use common\traits\FormModelValidate;

class AdminForm extends Admin
{
    use FormModelValidate;

    const SCENARIO_LOGIN = 'login';

    public $password_repeat;
    public $role_id;

    /**
     * @return array|array[]
     */
    public function rules()
    {
        return [
            [['id', 'username', 'password', 'name', 'password_repeat', 'role_id'], 'required'],
            [['password_repeat'], 'compare', 'compareAttribute' => 'password'],
            [['username', 'password', 'id'], $this->validateMethod()],
            [['status'], 'in', 'range' => [self::STATUS_OK, self::STATUS_FREEZE]],
        ];
    }

    /**
     * @return array|array[]
     */
    public function scenarios()
    {
        return array_merge(parent::scenarios(), [
            self::SCENARIO_STORE => ['username', 'password', 'name', 'password_repeat', 'role_id'],
            self::SCENARIO_UPDATE => ['id', 'name', 'role_id', 'status'],
            self::SCENARIO_DESTROY => ['id'],
            self::SCENARIO_LOGIN => ['username', 'password'],
        ]); // TODO: Change the autogenerated stub
    }

    /**
     * @return array|string[]
     */
    public function attributeLabels()
    {
        return array_merge(parent::attributeLabels(), [
            'password_repeat' => '密码确认'
        ]); // TODO: Change the autogenerated stub
    }

    /**
     * 验证账号
     */
    public function validateUsername()
    {
        if (self::find()->notDelete()->andWhere(['username'=>$this->username])->exists() && $this->getScenario() != self::SCENARIO_LOGIN) {
            $this->addError('username', '账号已存在');
        }
    }

    /**
     * 处理密码
     */
    public function validatePassword()
    {
        $this->password = sha1(sha1($this->password).$this->username);
    }
}